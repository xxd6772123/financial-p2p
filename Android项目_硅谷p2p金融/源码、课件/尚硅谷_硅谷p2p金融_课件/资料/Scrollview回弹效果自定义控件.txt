滚动回弹效果分析：

首先，创建一个类，继承scrollview，重写ontouch事件，实现伸缩回弹效果。

[scroollview节点下只能有一个子节点，这个子节点就是我们要移动的view布局]


第一步：获取要操作的子view布局

第二步：重写onTouch事件监听


分析具体事件:

观察分析得出结论：
让布局移动每一次拉动的Y轴一半的距离，然后松手滚动[携带动画]回到原来的位置。

下拉或者上拉的时候，记录按下时的Y轴位置

action_down:
y


移动过程中的处理

计算上一次与本次的Y轴（拉动距离）[而不是按下时候的Y值,和现在移动到的Y值，是每上一次和本次的Y值比较

判断是否需要移动布局的情况:Y轴的一个距离偏移

//2种情况，随着布局的拖动， inner.getMeasuredHeight()的值是变化的

//inner.getMeasuredHeight()与getHeight()的区别:
当屏幕可以包裹内容的时候，他们的值相等

当view的高度超出屏幕时，getMeasuredHeight()是实际View的大小，与屏幕无关，getHeight的大小此时则是屏幕的大小。
此时，getMeasuredHeight() = getHeight+超出部分。

抬起的处理:布局回滚到正常位置

移动动画回滚到正常位置(*:动画执行期间，不允许拖拉操作)	   
距离：-的滚动距离		