1.集成库---随便写其中一个版本

 compile 'com.youth.banner:banner:1.3.3'  //指定版本
    compile 'com.youth.banner:banner:+' //最新版本



2.布局---属性
-----------------------------简单使用-----------------------------------
   <com.youth.banner.Banner
                android:id="@+id/banner"
                android:layout_width="match_parent"
                android:layout_height="150dp"
                />

替换HomeFragment对应的布局中如下的标签：
	    <!--<FrameLayout-->
                <!--android:layout_width="match_parent"-->
                <!--android:layout_height="150dp">-->

                <!--<android.support.v4.view.ViewPager-->
                    <!--android:id="@+id/vp_home"-->
                    <!--android:layout_width="match_parent"-->
                    <!--android:layout_height="match_parent">-->

                <!--</android.support.v4.view.ViewPager>-->

                <!--<com.viewpagerindicator.CirclePageIndicator-->
                    <!--android:id="@+id/circle_home_progress"-->
                    <!--android:layout_width="match_parent"-->
                    <!--android:layout_height="wrap_content"-->
                    <!--android:layout_gravity="bottom|center_horizontal"-->
                    <!--android:layout_marginBottom="10dp" />-->


            <!--</FrameLayout>-->
-------------------------深度自定义的属性------------------------------------------
<com.youth.banner.Banner
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/banner"
    android:layout_width="match_parent"
    android:layout_height="高度自己设置"
    app:default_image="默认加载图片"
    app:delay_time="轮播间隔时间"
    app:is_auto_play="是否自动轮播"
    app:image_scale_type="fit_xy,和imageview的ScaleType作用一样，不过只提供了两个常用的"
    app:indicator_margin="指示器之间的间距"
    app:indicator_drawable_selected="指示器选中效果"
    app:indicator_drawable_unselected="指示器未选中效果"
    app:indicator_height="指示器圆形按钮的高度"
    app:indicator_width="指示器圆形按钮的宽度"
    app:title_background="标题栏的背景色"
    app:title_height="标题栏高度"
    app:title_textcolor="标题字体颜色"
    app:title_textsize="标题字体大小"/>

3.实例化对象

@Bind(R.id.banner)
    Banner banner

4.设置图片的集合数据的数组对象

例:    //一步搞定，设置图片就行了
             String[] imageUrl=new String[]{
                     mIndex.images.get(0).IMAURL,
                     mIndex.images.get(1).IMAURL,
                     mIndex.images.get(2).IMAURL,
                     mIndex.images.get(3).IMAURL};
                Log.e("TAG", "mIndex.images.get(0).IMAURL== "+mIndex.images.get(0).IMAURL.toString());
		
		注:样式和动画需写在此代码之前---不然会报错
                
		banner.setImages(imageUrl);//一步搞定，设置图片就行了

5.其它设置

5.1 banner.setBannerStyle():设置指示器样式。形参如下：
	常量名称 					描述
	BannerConfig.NOT_INDICATOR 			不显示指示器和标题(默认样式)
	BannerConfig.CIRCLE_INDICATOR 			显示圆形指示器
	BannerConfig.CIRCLE_INDICATOR_TITLE 		显示圆形指示器和标题（垂直显示）
	BannerConfig.CIRCLE_INDICATOR_TITLE_INSIDE 	显示圆形指示器和标题（水平显示）
	BannerConfig.NUM_INDICATOR 			显示数字指示器
	BannerConfig.NUM_INDICATOR_TITLE 		显示数字指示器和标题
5.2 banner.setIndicatorGravity()：设置指示器的显示位置。形参如下：
	BannerConfig.LEFT 	指示器居左
	BannerConfig.CENTER 	指示器居中
	BannerConfig.RIGHT 	指示器居右
5.3 banner.setBannerTitle(titles);	
在bannerstyle中使用了带title的模式下，可以继续指定title的内容。需要获取标题的数组对象或者集合对象


5.4 设置立体效果动画

  banner.setBannerAnimation(Transformer.CubeOut);

----------------------------------------其余动画效果-----------------------------------

	Transformer.Default
	Transformer.Accordion
	Transformer.BackgroundToForeground
	Transformer.ForegroundToBackground
	Transformer.CubeIn
	Transformer.CubeOut //立体效果
	Transformer.DepthPage
	Transformer.FlipHorizontal
	Transformer.FlipVertical
	Transformer.RotateDown
	Transformer.RotateUp
	Transformer.ScaleInOut
	Transformer.Stack
	Transformer.Tablet
	Transformer.ZoomIn
	Transformer.ZoomOut
	Transformer.ZoomOutSlide


7.其余方法

方法名 	描述
setBannerStyle(int bannerStyle) 	设置轮播样式（默认为Banner.NOT_INDICATOR）
setIndicatorGravity(int type) 		设置指示器位置（没有标题默认为右边,有标题时默认左边）
isAutoPlay(boolean isAutoPlay) 		设置是否自动轮播（默认自动，1.3.3结束）
startAutoPlay()				开始轮播（1.4开始，此方法只作用于banner加载完毕-->需要在start()后执行）
stopAutoPlay()				结束轮播（1.4开始，此方法只作用于banner加载完毕-->需要在start()后执行）
start()					开始进行banner渲染（1.4开始）
setBannerTitles(List titles)		设置轮播要显示的标题和图片对应（如果不传默认不显示标题）（1.4开始）
setDelayTime(int time) 			设置轮播图片间隔时间（单位毫秒，默认为2000）
setImages(Object[]/List<?> imagesUrl) 	设置轮播图片(所有设置参数方法都放在此方法之前执行。1.4后去掉数组传参)
setOnBannerClickListener(this) 		设置点击事件，下标是从1开始
setImageLoader(Object implements ImageLoader)  设置图片加载器（1.4开始）
setOnPageChangeListener(this) 		设置viewpager的滑动监听
setBannerAnimation(Class<? extends PageTransformer> transformer) 	设置viewpager的默认动画,传值见动画表
setPageTransformer(boolean reverseDrawingOrder, ViewPager.PageTransformer transformer) 	设置viewpager的自定义动画